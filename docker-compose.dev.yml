version: '3.8'
services:
  traefik:
    networks:
      development:
        aliases:
          - demo.dev.test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.infrastructure/conf/traefik/dev/traefik.yml:/traefik.yml:ro
      - ./.infrastructure/conf/traefik/dev/traefik-certs.yml:/traefik-certs.yml
      - ./.infrastructure/conf/traefik/dev/certificates/:/certificates

  php:
    build:
      target: development
      args:
        USER_ID: ${SPIN_USER_ID:-1000}
        GROUP_ID: ${SPIN_GROUP_ID:-1000}
    environment:
      SSL_MODE: "mixed"
    volumes:
      - .:/var/www/html/
    networks:
      - development
    depends_on:
      - traefik
      - mysql
      - meilisearch
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel.rule=HostRegexp(`demo.dev.test`)"
      - "traefik.http.routers.laravel.entrypoints=websecure"
      - "traefik.http.routers.laravel.tls=true"
      - "traefik.http.services.laravel.loadbalancer.server.port=80"
      - "traefik.http.services.laravel.loadbalancer.server.scheme=http"

  node:
    image: node:20
    volumes:
      - .:/usr/src/app/
    working_dir: /usr/src/app/
    networks:
      - development

  mysql:
    env_file:
      - ./.env
    networks:
      - development
    volumes:
      - ./.infrastructure/volume_data/mysql/database_data/:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-mysqluser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-mysqlpassword}
    ports:
      - "3306:3306"

  mailpit:
      hostname: mailpit
      image: axllent/mailpit
      networks:
        - development
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mailpit.rule=Host(`mailpit.dev.test`)"
        - "traefik.http.routers.mailpit.entrypoints=websecure"
        - "traefik.http.routers.mailpit.tls=true"
        - "traefik.http.services.mailpit.loadbalancer.server.port=8025"
        - "traefik.http.services.mailpit.loadbalancer.server.scheme=http"
      depends_on:
        - traefik

  meilisearch:
    env_file:
      - ./.env
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_KEY:-masterKey}
    volumes:
      - ./.infrastructure/volume_data/meilisearch/meilisearch_data:/meili_data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.rule=Host(`meilisearch.dev.test`)"
      - "traefik.http.routers.mailpit.entrypoints=websecure"
      - "traefik.http.routers.mailpit.tls=true"
      - "traefik.http.services.mailpit.loadbalancer.server.port=7700"
      - "traefik.http.services.mailpit.loadbalancer.server.scheme=http"
    depends_on:
      - traefik
    networks:
      - development

  redis:
    env_file:
      - ./.env
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-mysupersecretredispassword}
    volumes:
      - ./.infrastructure/volume_data/redis/data:/data
    networks:
      - development

  minio:
    hostname: minio
    image: minio/minio:latest
    env_file:
      - ./.env
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID:-root}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY:-root}
    command: minio server /data --console-address ":8900" --address 0.0.0.0:9000
    volumes:
      - ./.infrastructure/volume_data/minio/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.rule=Host(`minio.dev.test`)"
      - "traefik.http.routers.mailpit.entrypoints=websecure"
      - "traefik.http.routers.mailpit.tls=true"
      - "traefik.http.services.mailpit.loadbalancer.server.port=9000"
      - "traefik.http.services.mailpit.loadbalancer.server.scheme=http"
    depends_on:
      - traefik
    networks:
      - development

networks:
  development:
